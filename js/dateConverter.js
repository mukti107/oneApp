
//function is_leap_year(e){return $a=e,$a%100==0?$a%400==0?!0:!1:$a%4==0?!0:!1}function get_nepali_month(e){switch($n_month=!1,e){case 1:$n_month="Baishak";break;case 2:$n_month="Jestha";break;case 3:$n_month="Ashad";break;case 4:$n_month="Shrawn";break;case 5:$n_month="Bhadra";break;case 6:$n_month="Ashwin";break;case 7:$n_month="kartik";break;case 8:$n_month="Mangshir";break;case 9:$n_month="Poush";break;case 10:$n_month="Magh";break;case 11:$n_month="Falgun";break;case 12:$n_month="Chaitra"}return $n_month}function get_english_month(e){switch($eMonth=!1,e){case 1:$eMonth="January";break;case 2:$eMonth="February";break;case 3:$eMonth="March";break;case 4:$eMonth="April";break;case 5:$eMonth="May";break;case 6:$eMonth="June";break;case 7:$eMonth="July";break;case 8:$eMonth="August";break;case 9:$eMonth="September";break;case 10:$eMonth="October";break;case 11:$eMonth="November";break;case 12:$eMonth="December"}return $eMonth}function get_day_of_week(e){switch(e){case 1:e="Sunday";break;case 2:e="Monday";break;case 3:e="Tuesday";break;case 4:e="Wednesday";break;case 5:e="Thursday";break;case 6:e="Friday";break;case 7:e="Saturday"}return e}function is_range_eng(e,a,n){return 1944>e||e>2033?(debug_info="Supported only between 1944-2022",!1):1>a||a>12?(debug_info="Error! value 1-12 only",!1):1>n||n>31?(debug_info="Error! value 1-31 only",!1):!0}function is_range_nep(e,a,n){return 2e3>e||e>2089?(debug_info="Supported only between 2000-2089",!1):1>a||a>12?(debug_info="Error! value 1-12 only",!1):1>n||n>32?(debug_info="Error! value 1-31 only",!1):!0}function eng_to_nep(e,a,n){if(0==is_range_eng(e,a,n))return!1;for($month=[31,28,31,30,31,30,31,31,30,31,30,31],$lmonth=[31,29,31,30,31,30,31,31,30,31,30,31],$def_eyy=1944,$def_nyy=2e3,$def_nmm=9,$def_ndd=16,$total_eDays=0,$total_nDays=0,$a=0,$day=6,$m=0,$y=0,$i=0,$j=0,$numDay=0,$i=0;$i<e-$def_eyy;$i++)if(1==is_leap_year($def_eyy+$i))for($j=0;$j<12;$j++)$total_eDays+=$lmonth[$j];else for($j=0;$j<12;$j++)$total_eDays+=$month[$j];for($i=0;$i<a-1;$i++)1==is_leap_year(e)?$total_eDays+=$lmonth[$i]:$total_eDays+=$month[$i];for($total_eDays+=n,$i=0,$j=$def_nmm,$total_nDays=$def_ndd,$m=$def_nmm,$y=$def_nyy;0!=$total_eDays;)$a=bs[$i][$j],$total_nDays++,$day++,$total_nDays>$a&&($m++,$total_nDays=1,$j++),$day>7&&($day=1),$m>12&&($y++,$m=1),$j>12&&($j=1,$i++),$total_eDays--;return $numDay=$day,nep_date.year=$y,nep_date.month=$m,nep_date.date=$total_nDays,nep_date.day=get_day_of_week($day),nep_date.nmonth=get_nepali_month($m),nep_date.num_day=$numDay,nep_date}function nep_to_eng(e,a,n){if($def_eyy=1943,$def_emm=4,$def_edd=13,$def_nyy=2e3,$def_nmm=1,$def_ndd=1,$total_eDays=0,$total_nDays=0,$a=0,$day=3,$m=0,$y=0,$i=0,$k=0,$numDay=0,$month=[0,31,28,31,30,31,30,31,31,30,31,30,31],$lmonth=[0,31,29,31,30,31,30,31,31,30,31,30,31],is_range_nep(e,a,n)===!1)return!1;for($i=0;$i<e-$def_nyy;$i++){for($j=1;$j<=12;$j++)$total_nDays+=bs[$k][$j];$k++}for($j=1;$j<a;$j++)$total_nDays+=bs[$k][$j];for($total_nDays+=n,$total_eDays=$def_edd,$m=$def_emm,$y=$def_eyy;0!=$total_nDays;)is_leap_year($y)?$a=$lmonth[$m]:$a=$month[$m],$total_eDays++,$day++,$total_eDays>$a&&($m++,$total_eDays=1,$m>12&&($y++,$m=1)),$day>7&&($day=1),$total_nDays--;return $numDay=$day,eng_date.year=$y,eng_date.month=$m,eng_date.date=$total_eDays,eng_date.day=get_day_of_week($day),eng_date.emonth=get_english_month($m),eng_date.num_day=$numDay,eng_date}var bs={0:[2e3,30,32,31,32,31,30,30,30,29,30,29,31],1:[2001,31,31,32,31,31,31,30,29,30,29,30,30],2:[2002,31,31,32,32,31,30,30,29,30,29,30,30],3:[2003,31,32,31,32,31,30,30,30,29,29,30,31],4:[2004,30,32,31,32,31,30,30,30,29,30,29,31],5:[2005,31,31,32,31,31,31,30,29,30,29,30,30],6:[2006,31,31,32,32,31,30,30,29,30,29,30,30],7:[2007,31,32,31,32,31,30,30,30,29,29,30,31],8:[2008,31,31,31,32,31,31,29,30,30,29,29,31],9:[2009,31,31,32,31,31,31,30,29,30,29,30,30],10:[2010,31,31,32,32,31,30,30,29,30,29,30,30],11:[2011,31,32,31,32,31,30,30,30,29,29,30,31],12:[2012,31,31,31,32,31,31,29,30,30,29,30,30],13:[2013,31,31,32,31,31,31,30,29,30,29,30,30],14:[2014,31,31,32,32,31,30,30,29,30,29,30,30],15:[2015,31,32,31,32,31,30,30,30,29,29,30,31],16:[2016,31,31,31,32,31,31,29,30,30,29,30,30],17:[2017,31,31,32,31,31,31,30,29,30,29,30,30],18:[2018,31,32,31,32,31,30,30,29,30,29,30,30],19:[2019,31,32,31,32,31,30,30,30,29,30,29,31],20:[2020,31,31,31,32,31,31,30,29,30,29,30,30],21:[2021,31,31,32,31,31,31,30,29,30,29,30,30],22:[2022,31,32,31,32,31,30,30,30,29,29,30,30],23:[2023,31,32,31,32,31,30,30,30,29,30,29,31],24:[2024,31,31,31,32,31,31,30,29,30,29,30,30],25:[2025,31,31,32,31,31,31,30,29,30,29,30,30],26:[2026,31,32,31,32,31,30,30,30,29,29,30,31],27:[2027,30,32,31,32,31,30,30,30,29,30,29,31],28:[2028,31,31,32,31,31,31,30,29,30,29,30,30],29:[2029,31,31,32,31,32,30,30,29,30,29,30,30],30:[2030,31,32,31,32,31,30,30,30,29,29,30,31],31:[2031,30,32,31,32,31,30,30,30,29,30,29,31],32:[2032,31,31,32,31,31,31,30,29,30,29,30,30],33:[2033,31,31,32,32,31,30,30,29,30,29,30,30],34:[2034,31,32,31,32,31,30,30,30,29,29,30,31],35:[2035,30,32,31,32,31,31,29,30,30,29,29,31],36:[2036,31,31,32,31,31,31,30,29,30,29,30,30],37:[2037,31,31,32,32,31,30,30,29,30,29,30,30],38:[2038,31,32,31,32,31,30,30,30,29,29,30,31],39:[2039,31,31,31,32,31,31,29,30,30,29,30,30],40:[2040,31,31,32,31,31,31,30,29,30,29,30,30],41:[2041,31,31,32,32,31,30,30,29,30,29,30,30],42:[2042,31,32,31,32,31,30,30,30,29,29,30,31],43:[2043,31,31,31,32,31,31,29,30,30,29,30,30],44:[2044,31,31,32,31,31,31,30,29,30,29,30,30],45:[2045,31,32,31,32,31,30,30,29,30,29,30,30],46:[2046,31,32,31,32,31,30,30,30,29,29,30,31],47:[2047,31,31,31,32,31,31,30,29,30,29,30,30],48:[2048,31,31,32,31,31,31,30,29,30,29,30,30],49:[2049,31,32,31,32,31,30,30,30,29,29,30,30],50:[2050,31,32,31,32,31,30,30,30,29,30,29,31],51:[2051,31,31,31,32,31,31,30,29,30,29,30,30],52:[2052,31,31,32,31,31,31,30,29,30,29,30,30],53:[2053,31,32,31,32,31,30,30,30,29,29,30,30],54:[2054,31,32,31,32,31,30,30,30,29,30,29,31],55:[2055,31,31,32,31,31,31,30,29,30,29,30,30],56:[2056,31,31,32,31,32,30,30,29,30,29,30,30],57:[2057,31,32,31,32,31,30,30,30,29,29,30,31],58:[2058,30,32,31,32,31,30,30,30,29,30,29,31],59:[2059,31,31,32,31,31,31,30,29,30,29,30,30],60:[2060,31,31,32,32,31,30,30,29,30,29,30,30],61:[2061,31,32,31,32,31,30,30,30,29,29,30,31],62:[2062,30,32,31,32,31,31,29,30,29,30,29,31],63:[2063,31,31,32,31,31,31,30,29,30,29,30,30],64:[2064,31,31,32,32,31,30,30,29,30,29,30,30],65:[2065,31,32,31,32,31,30,30,30,29,29,30,31],66:[2066,31,31,31,32,31,31,29,30,30,29,29,31],67:[2067,31,31,32,31,31,31,30,29,30,29,30,30],68:[2068,31,31,32,32,31,30,30,29,30,29,30,30],69:[2069,31,32,31,32,31,30,30,30,29,29,30,31],70:[2070,31,31,31,32,31,31,29,30,30,29,30,30],71:[2071,31,31,32,31,31,31,30,29,30,29,30,30],72:[2072,31,32,31,32,31,30,30,29,30,29,30,30],73:[2073,31,32,31,32,31,30,30,30,29,29,30,31],74:[2074,31,31,31,32,31,31,30,29,30,29,30,30],75:[2075,31,31,32,31,31,31,30,29,30,29,30,30],76:[2076,31,32,31,32,31,30,30,30,29,29,30,30],77:[2077,31,32,31,32,31,30,30,30,29,30,29,31],78:[2078,31,31,31,32,31,31,30,29,30,29,30,30],79:[2079,31,31,32,31,31,31,30,29,30,29,30,30],80:[2080,31,32,31,32,31,30,30,30,29,29,30,30],81:[2081,31,31,32,32,31,30,30,30,29,30,30,30],82:[2082,30,32,31,32,31,30,30,30,29,30,30,30],83:[2083,31,31,32,31,31,30,30,30,29,30,30,30],84:[2084,31,31,32,31,31,30,30,30,29,30,30,30],85:[2085,31,32,31,32,30,31,30,30,29,30,30,30],86:[2086,30,32,31,32,31,30,30,30,29,30,30,30],87:[2087,31,31,32,31,31,31,30,30,29,30,30,30],88:[2088,30,31,32,32,30,31,30,30,29,30,30,30],89:[2089,30,32,31,32,31,30,30,30,29,30,30,30],90:[2090,30,32,31,32,31,30,30,30,29,30,30,3]},nep_date={year:"",month:"",date:"",day:"",nmonth:"",num_day:""},eng_date={year:"",month:"",date:"",day:"",emonth:"",num_day:""},debug_info="";
		var bs ={
			0:[2000,30,32,31,32,31,30,30,30,29,30,29,31],
			1:[2001,31,31,32,31,31,31,30,29,30,29,30,30],
			2:[2002,31,31,32,32,31,30,30,29,30,29,30,30],
			3:[2003,31,32,31,32,31,30,30,30,29,29,30,31],
			4:[2004,30,32,31,32,31,30,30,30,29,30,29,31],
			5:[2005,31,31,32,31,31,31,30,29,30,29,30,30],
			6:[2006,31,31,32,32,31,30,30,29,30,29,30,30],
			7:[2007,31,32,31,32,31,30,30,30,29,29,30,31],
			8:[2008,31,31,31,32,31,31,29,30,30,29,29,31],
			9:[2009,31,31,32,31,31,31,30,29,30,29,30,30],
			10:[2010,31,31,32,32,31,30,30,29,30,29,30,30],
			11:[2011,31,32,31,32,31,30,30,30,29,29,30,31],
			12:[2012,31,31,31,32,31,31,29,30,30,29,30,30],
			13:[2013,31,31,32,31,31,31,30,29,30,29,30,30],
			14:[2014,31,31,32,32,31,30,30,29,30,29,30,30],
			15:[2015,31,32,31,32,31,30,30,30,29,29,30,31],
			16:[2016,31,31,31,32,31,31,29,30,30,29,30,30],
			17:[2017,31,31,32,31,31,31,30,29,30,29,30,30],
			18:[2018,31,32,31,32,31,30,30,29,30,29,30,30],
			19:[2019,31,32,31,32,31,30,30,30,29,30,29,31],
			20:[2020,31,31,31,32,31,31,30,29,30,29,30,30],
			21:[2021,31,31,32,31,31,31,30,29,30,29,30,30],
			22:[2022,31,32,31,32,31,30,30,30,29,29,30,30],
			23:[2023,31,32,31,32,31,30,30,30,29,30,29,31],
			24:[2024,31,31,31,32,31,31,30,29,30,29,30,30],
			25:[2025,31,31,32,31,31,31,30,29,30,29,30,30],
			26:[2026,31,32,31,32,31,30,30,30,29,29,30,31],
			27:[2027,30,32,31,32,31,30,30,30,29,30,29,31],
			28:[2028,31,31,32,31,31,31,30,29,30,29,30,30],
			29:[2029,31,31,32,31,32,30,30,29,30,29,30,30],
			30:[2030,31,32,31,32,31,30,30,30,29,29,30,31],
			31:[2031,30,32,31,32,31,30,30,30,29,30,29,31],
			32:[2032,31,31,32,31,31,31,30,29,30,29,30,30],
			33:[2033,31,31,32,32,31,30,30,29,30,29,30,30],
			34:[2034,31,32,31,32,31,30,30,30,29,29,30,31],
			35:[2035,30,32,31,32,31,31,29,30,30,29,29,31],
			36:[2036,31,31,32,31,31,31,30,29,30,29,30,30],
			37:[2037,31,31,32,32,31,30,30,29,30,29,30,30],
			38:[2038,31,32,31,32,31,30,30,30,29,29,30,31],
			39:[2039,31,31,31,32,31,31,29,30,30,29,30,30],
			40:[2040,31,31,32,31,31,31,30,29,30,29,30,30],
			41:[2041,31,31,32,32,31,30,30,29,30,29,30,30],
			42:[2042,31,32,31,32,31,30,30,30,29,29,30,31],
			43:[2043,31,31,31,32,31,31,29,30,30,29,30,30],
			44:[2044,31,31,32,31,31,31,30,29,30,29,30,30],
			45:[2045,31,32,31,32,31,30,30,29,30,29,30,30],
			46:[2046,31,32,31,32,31,30,30,30,29,29,30,31],
			47:[2047,31,31,31,32,31,31,30,29,30,29,30,30],
			48:[2048,31,31,32,31,31,31,30,29,30,29,30,30],
			49:[2049,31,32,31,32,31,30,30,30,29,29,30,30],
			50:[2050,31,32,31,32,31,30,30,30,29,30,29,31],
			51:[2051,31,31,31,32,31,31,30,29,30,29,30,30],
			52:[2052,31,31,32,31,31,31,30,29,30,29,30,30],
			53:[2053,31,32,31,32,31,30,30,30,29,29,30,30],
			54:[2054,31,32,31,32,31,30,30,30,29,30,29,31],
			55:[2055,31,31,32,31,31,31,30,29,30,29,30,30],
			56:[2056,31,31,32,31,32,30,30,29,30,29,30,30],
			57:[2057,31,32,31,32,31,30,30,30,29,29,30,31],
			58:[2058,30,32,31,32,31,30,30,30,29,30,29,31],
			59:[2059,31,31,32,31,31,31,30,29,30,29,30,30],
			60:[2060,31,31,32,32,31,30,30,29,30,29,30,30],
			61:[2061,31,32,31,32,31,30,30,30,29,29,30,31],
		    62:[2062,30,32,31,32,31,31,29,30,29,30,29,31],
			63:[2063,31,31,32,31,31,31,30,29,30,29,30,30],
			64:[2064,31,31,32,32,31,30,30,29,30,29,30,30],
			65:[2065,31,32,31,32,31,30,30,30,29,29,30,31],
			66:[2066,31,31,31,32,31,31,29,30,30,29,29,31],
			67:[2067,31,31,32,31,31,31,30,29,30,29,30,30],
			68:[2068,31,31,32,32,31,30,30,29,30,29,30,30],
			69:[2069,31,32,31,32,31,30,30,30,29,29,30,31],
			70:[2070,31,31,31,32,31,31,29,30,30,29,30,30],
			71:[2071,31,31,32,31,31,31,30,29,30,29,30,30],
			72:[2072,31,32,31,32,31,30,30,29,30,29,30,30],
			73:[2073,31,32,31,32,31,30,30,30,29,29,30,31],
			74:[2074,31,31,31,32,31,31,30,29,30,29,30,30],
			75:[2075,31,31,32,31,31,31,30,29,30,29,30,30],
			76:[2076,31,32,31,32,31,30,30,30,29,29,30,30],
			77:[2077,31,32,31,32,31,30,30,30,29,30,29,31],
			78:[2078,31,31,31,32,31,31,30,29,30,29,30,30],
			79:[2079,31,31,32,31,31,31,30,29,30,29,30,30],
			80:[2080,31,32,31,32,31,30,30,30,29,29,30,30],
			81:[2081, 31, 31, 32, 32, 31, 30, 30, 30, 29, 30, 30, 30],
			82:[2082, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],
			83:[2083, 31, 31, 32, 31, 31, 30, 30, 30, 29, 30, 30, 30],
			84:[2084, 31, 31, 32, 31, 31, 30, 30, 30, 29, 30, 30, 30],
			85:[2085, 31, 32, 31, 32, 30, 31, 30, 30, 29, 30, 30, 30],
			86:[2086, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],
			87:[2087, 31, 31, 32, 31, 31, 31, 30, 30, 29, 30, 30, 30],
			88:[2088, 30, 31, 32, 32, 30, 31, 30, 30, 29, 30, 30, 30],
			89:[2089, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],
			90:[2090, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 3]
			};
	 	
	 	 var nep_date = {'year':'', 'month':'', 'date':'', 'day':'','nmonth':'','num_day':''};
	 	 var eng_date = {'year':'', 'month':'', 'date':'', 'day':'','emonth':'','num_day':''};
	 	 var debug_info = "";
	
	
		/**
		 * Calculates wheather english year is leap year or not
		 *
		 * @param integer $year
		 * @return boolean
		 */
		 function is_leap_year($year)
		{
			$a = $year;
			if ($a%100==0)
			{
			 if($a%400==0)
			 {
				return true;
			 } else {
			 	return false;
			 }
				
			} else { 
				if ($a%4==0)
				{
					return true;
				} else {
					return false;
				}
			}
		}
	
		 function get_nepali_month($m){
			$n_month = false;
			
			switch($m){
				case 1:
					$n_month = "&#2357;&#2376;&#2358;&#2366;&#2326;";
					break;
					
				case 2:
					$n_month = "&#2332;&#2375;&#2336;";
					break;
					
				case 3:
					$n_month = "&#2310;&#2359;&#2366;&#2338;&#2364;";
					break;
					
				case 4:
					$n_month = "&#2358;&#2381;&#2352;&#2366;&#2357;&#2339;";
					break;
					
				case 5:
					$n_month = "&#2349;&#2366;&#2342;&#2381;&#2352;";
					break;
				
				case 6:
					$n_month = "&#2309;&#2360;&#2379;&#2332;";
					break;
				
				case 7:
					$n_month = " &#2325;&#2366;&#2352;&#2381;&#2340;&#2367;&#2325;	";
					break;
				
				case 8:
					$n_month = "&#2350;&#2366;&#2352;&#2381;&#2327;&#2358;&#2368;&#2352;&#2381;&#2359;";
					break;
				
				case 9:
					$n_month = "&#2346;&#2380;&#2359;";
					break;
				
				case 10:
					$n_month = "&#2350;&#2366;&#2328;";
					break;
				
				case 11:
					$n_month = "&#2347;&#2366;&#2354;&#2381;&#2327;&#2369;&#2344;";
					break;
				
				case 12:
					$n_month = "&#2330;&#2376;&#2340;&#2381;&#2352;";
					break;
			}	
			return  $n_month;
		}
	
		 function get_english_month($m){
			$eMonth = false;
			switch($m){
				case 1:
					$eMonth = "January";
					break;
				case 2:
					$eMonth = "February";
					break;
				case 3:
					$eMonth = "March";
					break;
				case 4:
					$eMonth = "April";
					break;
				case 5:
					$eMonth = "May";
					break;
				case 6:
					$eMonth = "June";
					break;
				case 7:
					$eMonth = "July";
					break;
				case 8:
					$eMonth = "August";
					break;
				case 9:
					$eMonth = "September";
					break;
				case 10:
					$eMonth = "October";
					break;
				case 11:
					$eMonth = "November";
					break;
				case 12:
					$eMonth = "December";
			}
			return $eMonth;	
		}
	
		 function get_day_of_week_eng($day){
		 return["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][+$day-1];		
		}

		function get_day_of_week_nep($day){		
			return["&#2310;&#2311;&#2340;&#2357;&#2366;&#2352;","&#2360;&#2379;&#2350;&#2357;&#2366;&#2352;","&#2350;&#2329;&#2381;&#2327;&#2354;&#2357;&#2366;&#2352;","&#2348;&#2369;&#2343;&#2357;&#2366;&#2352;","&#2348;&#2367;&#2361;&#2367;&#2357;&#2366;&#2352;","&#2358;&#2369;&#2325;&#2381;&#2352;&#2357;&#2366;&#2352;","&#2358;&#2344;&#2367;&#2357;&#2366;&#2352;"][+$day-1];
		}
	
		 function is_range_eng($yy, $mm, $dd){
			if($yy<1944 || $yy>2033){
				debug_info = "Supported only between 1944-2022";
				return false;
			}
				
			if($mm<1 || $mm >12){
				debug_info = "Error! value 1-12 only";
				return false;
			}
				
			if($dd<1 || $dd >31){
				debug_info = "Error! value 1-31 only";			
				return false;
			}	
			
			return true;
		}
	
		 function is_range_nep($yy, $mm, $dd){		
			if($yy<2000 || $yy>2089){
				debug_info="Supported only between 2000-2089";
				return false;
			}
			
			if($mm<1 || $mm >12) {
				debug_info="Error! value 1-12 only";
				return false;
			}
			
			if($dd<1 || $dd >32){
				debug_info="Error! value 1-31 only";	
				return false;
			}		
			
			return true;
		}	
		
		
		/**
		 * currently can only calculate the date between AD 1944-2033...
		 *
		 * @param unknown_type $yy
		 * @param unknown_type $mm
		 * @param unknown_type $dd
		 * @return unknown
		 */
		
		 function eng_to_nep($yy,$mm,$dd){
			//echo '--eng bhitra'.$yy.' '.$mm.'  '.$dd;
			if (is_range_eng($yy, $mm, $dd) == false){
				return false;
			} else {			
				
				// english month data.
			 	$month = [31,28,31,30,31,30,31,31,30,31,30,31];
			 	$lmonth = [31,29,31,30,31,30,31,31,30,31,30,31];
				
				$def_eyy = 1944;									//spear head english date...
				$def_nyy = 2000; $def_nmm = 9; $def_ndd = 17-1;		//spear head nepali date...
				$total_eDays=0; $total_nDays=0; $a=0; $day=7-1;		//all the initializations...
				$m = 0; $y = 0; $i =0; $j = 0;
				$numDay=0;
				
				// count total no. of days in-terms of year
				for($i=0; $i<($yy-$def_eyy); $i++){	//total days for month calculation...(english)
					if(is_leap_year($def_eyy+$i)==1)
						for($j=0; $j<12; $j++)
							$total_eDays += $lmonth[$j];
					else
						for($j=0; $j<12; $j++)
							$total_eDays += $month[$j];
				}
				
				// count total no. of days in-terms of month					
				for($i=0; $i<($mm-1); $i++){		
					if(is_leap_year($yy)==1)
						$total_eDays += $lmonth[$i];
					else
						$total_eDays += $month[$i];
				}
				
				// count total no. of days in-terms of date
				$total_eDays += $dd;
				
				
				$i = 0; $j = $def_nmm;					
				$total_nDays = $def_ndd;
				$m = $def_nmm;
				$y = $def_nyy;
				
				// count nepali date from array
				while($total_eDays != 0) {
			        $a = bs[$i][$j];
					$total_nDays++;						//count the days
					$day++;								//count the days interms of 7 days
					if($total_nDays > $a){
						$m++;
						$total_nDays=1;
						$j++;
					}
					if($day > 7)
						$day = 1;
					if($m > 12){
						$y++;
						$m = 1;
					}
				    if($j > 12){
						$j = 1; $i++;
					}
					$total_eDays--;
				}
				
				$numDay=$day;
				
				nep_date["year"] = $y;
				nep_date["month"] = $m;
				nep_date["date"] = $total_nDays;
				nep_date["day"] = get_day_of_week_nep($day);
				nep_date["nmonth"] = get_nepali_month($m);
				nep_date["num_day"] = $numDay;
				
				return nep_date;
			}
		}
		
		
		/**
		 * currently can only calculate the date between BS 2000-2089
		 *
		 * @param unknown_type $yy
		 * @param unknown_type $mm
		 * @param unknown_type $dd
		 * @return unknown
		 */
		 function nep_to_eng($yy,$mm,$dd){
			
			
			$def_eyy = 1943	; $def_emm=4 ; $def_edd=14-1;		// init english date.
			$def_nyy = 2000; $def_nmm = 1; $def_ndd = 1;		// equivalent nepali date.
			$total_eDays=0; $total_nDays=0; $a=0; $day=4-1;		// initializations...
			$m = 0; $y = 0; $i=0;
			$k = 0;	$numDay = 0;
			
			$month = [0,31,28,31,30,31,30,31,31,30,31,30,31];
 			$lmonth = [0,31,29,31,30,31,30,31,31,30,31,30,31];
			
			if(is_range_nep($yy, $mm, $dd)===false){
				return false;
				
			} else {
				
				// count total days in-terms of year
				for($i=0; $i<($yy-$def_nyy); $i++){	
					for($j=1; $j<=12; $j++){
						$total_nDays += bs[$k][$j];
					}
					$k++;
				}
				
				// count total days in-terms of month			
				for($j=1; $j<$mm; $j++){
					$total_nDays += bs[$k][$j];
				}
				
				// count total days in-terms of dat
				$total_nDays += $dd;			
				
				//calculation of equivalent english date...
				$total_eDays = $def_edd;
				$m = $def_emm;
				$y = $def_eyy;
				while($total_nDays != 0){
					if(is_leap_year($y))
					{
						$a = $lmonth[$m];
					}
					else
					{
						$a = $month[$m];
					}
					$total_eDays++;
					$day++;
					if($total_eDays > $a){
						$m++;
						$total_eDays = 1;
						if($m > 12){
							$y++;
							$m = 1;
						}	
					}
					if($day > 7)
						$day = 1;
					$total_nDays--;	
				}
				$numDay = $day;
				
				eng_date["year"] = $y;					
				eng_date["month"] = $m;					
				eng_date["date"] = $total_eDays;		
				eng_date["day"] = get_day_of_week_eng($day);					
				eng_date["emonth"] = get_english_month($m);  			
				eng_date["num_day"] = $numDay;			
				
				return eng_date;			
			}
		}

	